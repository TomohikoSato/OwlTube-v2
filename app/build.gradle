apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    dataBinding {
        enabled = true
    }
    defaultConfig {
        applicationId "com.sgr.owltube_v2"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        def properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def API_KEY = properties.getProperty("youtube_data_api_key")
        buildConfigField("String", "YOUTUBE_DATA_API_KEY", "\"${API_KEY}\"")

        multiDexEnabled true
    }
    buildTypes {
        release {
/*            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'*/
        }
    }
}

buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'com.cookpad.android.licensetools:license-tools-plugin:0.23.0'
        classpath 'io.fabric.tools:gradle:1.24.2'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'io.fabric'

apply plugin: 'com.cookpad.android.licensetools'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion"

    implementation 'com.google.firebase:firebase-core:11.4.0'

    def supportVersion = "26.1.0"
    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "com.android.support:design:$supportVersion"
    implementation "com.android.support:support-v4:$supportVersion"
    implementation "com.android.support:recyclerview-v7:$supportVersion"

    implementation 'com.google.android:flexbox:0.3.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0-beta1'

    def retrofitVersion = '2.3.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation("com.squareup.retrofit2:converter-simplexml:$retrofitVersion") {
        exclude module: 'stax'
        exclude module: 'stax-api'
        exclude module: 'xpp3'
    }
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    implementation "io.reactivex.rxjava2:rxjava:2.1.3"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.1'

    def daggerVersion = '2.11'
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    def moshiVersion = '1.5.0'
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"

    kapt 'com.android.databinding:compiler:2.3.3'

    implementation 'com.jakewharton.threetenabp:threetenabp:1.0.5'

    implementation 'com.github.PierfrancescoSoffritti:AndroidYouTubePlayer:0.7.7'

    def leakCanaryVersion = '1.5.3'
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    def glideVersion = '4.1.1'
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation("com.github.bumptech.glide:recyclerview-integration:$glideVersion") {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    def archComponentVersion = '1.0.0-beta1'
    implementation "android.arch.persistence.room:runtime:$archComponentVersion"
    kapt "android.arch.persistence.room:compiler:$archComponentVersion"
    androidTestImplementation "android.arch.persistence.room:testing:$archComponentVersion"
    implementation "android.arch.persistence.room:rxjava2:$archComponentVersion"

    debugImplementation 'com.facebook.stetho:stetho:1.5.0'

    implementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }

    testImplementation 'junit:junit:4.12'
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

/*
line be at the bottom of your app/build.gradle file so that no dependency collisions are introduced.
cf. https://developers.google.com/android/guides/google-services-plugin
*/
apply plugin: 'com.google.gms.google-services'